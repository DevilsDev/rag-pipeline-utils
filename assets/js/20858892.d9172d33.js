"use strict";(self.webpackChunk_devilsdev_rag_pipeline_utils=self.webpackChunk_devilsdev_rag_pipeline_utils||[]).push([[1089],{9193:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Overview","collapsed":false,"items":[{"type":"link","label":"Introduction","href":"/rag-pipeline-utils/docs/Introduction","docId":"Introduction","unlisted":false},{"type":"link","label":"Architecture","href":"/rag-pipeline-utils/docs/Architecture","docId":"Architecture","unlisted":false},{"type":"link","label":"Real-World Use Cases","href":"/rag-pipeline-utils/docs/Use-Cases","docId":"Use-Cases","unlisted":false}],"collapsible":true},{"type":"category","label":"Developer Guide","collapsed":false,"items":[{"type":"link","label":"Usage","href":"/rag-pipeline-utils/docs/Usage","docId":"Usage","unlisted":false},{"type":"link","label":"CLI Reference","href":"/rag-pipeline-utils/docs/CLI","docId":"CLI","unlisted":false},{"type":"link","label":"Plugins","href":"/rag-pipeline-utils/docs/Plugins","docId":"Plugins","unlisted":false}],"collapsible":true},{"type":"category","label":"Advanced","collapsed":true,"items":[{"type":"link","label":"Evaluation","href":"/rag-pipeline-utils/docs/Evaluation","docId":"Evaluation","unlisted":false},{"type":"link","label":"FAQ","href":"/rag-pipeline-utils/docs/FAQ","docId":"FAQ","unlisted":false}],"collapsible":true}]},"docs":{"Architecture":{"id":"Architecture","title":"Architecture","description":"This page outlines the internal architecture of the RAG pipeline utilities, emphasizing modularity, plugin design, and SOLID-compliant structure.","sidebar":"tutorialSidebar"},"CLI":{"id":"CLI","title":"CLI Reference","description":"The CLI gives you interactive access to the RAG pipeline tools via terminal.","sidebar":"tutorialSidebar"},"Evaluation":{"id":"Evaluation","title":"Evaluation","description":"This module allows you to evaluate the quality of generated LLM responses in a RAG pipeline.","sidebar":"tutorialSidebar"},"FAQ":{"id":"FAQ","title":"FAQ","description":"\u2753 Can I use this with my own vector database?","sidebar":"tutorialSidebar"},"Introduction":{"id":"Introduction","title":"Introduction","description":"Welcome to @yourorg/rag-pipeline-utils, a modular Node.js toolkit for building scalable, pluggable Retrieval-Augmented Generation (RAG) systems.","sidebar":"tutorialSidebar"},"Plugins":{"id":"Plugins","title":"Plugins","description":"The toolkit is fully modular. You can inject your own loaders, retrievers, embedders, or LLMs.","sidebar":"tutorialSidebar"},"Usage":{"id":"Usage","title":"Usage","description":"This guide covers how to use @yourorg/rag-pipeline-utils programmatically via API and through the CLI.","sidebar":"tutorialSidebar"},"Use-Cases":{"id":"Use-Cases","title":"Real-World Use Cases","description":"Real-World Applications of RAG Pipeline Utils","sidebar":"tutorialSidebar"}}}}')}}]);